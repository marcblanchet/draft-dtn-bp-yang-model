<?xml version="1.0" encoding="utf-8"?>
<?xml-model href="rfc7991bis.rnc"?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!DOCTYPE rfc [
<!ENTITY nbsp "&#160;">
<!ENTITY zwsp "&#8203;">
<!ENTITY nbhy "&#8209;">
<!ENTITY wj "&#8288;">
]>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="std" docName="draft-blanchet-dtn-bp-yang-model-00" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" xml:lang="en" version="3">
  <front>
    <title>Bundle Protocol Yang Model</title>
    <seriesInfo name="Internet-Draft" value="draft-blanchet-dtn-bp-yang-model"/>
    <author fullname="Marc Blanchet" initials="M">
       <organization>Viagenie</organization>
      <address>
        <email>marc.blanchet@viagenie.ca</email>
      </address>
    </author>
    <author fullname="Yingzhen Qu" initials="Y" surname="Qu">
      <organization>Futurewei</organization>
      <address>
        <postal>
          <street>2330 Central Expressway</street>
          <city>Santa Clara</city>
          <region>CA</region>
          <code>95050</code>
          <country>USA</country>
        </postal>
        <phone/>
        <email>yingzhen.qu@futurewei.com</email>
      </address>
    </author>
    <date year="2023"/>
    <area>Transport</area>
    <workgroup>Internet Engineering Task Force</workgroup>
    <keyword>yang</keyword>
    <keyword>dtn</keyword>
    <keyword>bundle</keyword>
    <abstract>
      <t>This document describes the Yang model for the Bundle protocol.</t>
    </abstract>
  </front>
  <middle>
    <section>
      <name>Introduction</name>
      <t>
        YANG <xref target="RFC7950"/> is a data definition language
        used to define the contents of a conceptual data store
        that allows networked devices to be managed using NETCONF
        <xref target="RFC6241"/>.  YANG is proving relevant beyond its
        initial confines, as bindings to other interfaces (e.g., ReST) and
        encodings other than XML (e.g., JSON) are being defined.  Furthermore,
        YANG data models can be used as the basis for implementation of other
        interfaces, such as CLI and programmatic APIs.
      </t>
      <t>The YANG model in this document specifies the data model to manage a Bundle Protocol (BP) node. It supports both BP version 6 <xref target="RFC5050"/> and version 7 <xref target="RFC9171"/>.</t>
      <t>The Bundle Protocol<xref target="RFC9171"/> is typically used for Delay and Disruption Tolerant Networks (DTN) where connectivity is often disrupted by long periods and communications delays are multiple orders of magnitude longer than terrestrial Internet. These communications characteristics are not typical in normal Internet or enterprise Network Management scenarios. For that reason, a new network management protocol and infrastructure, named DTN Management Architecture (DTNMA), is defined <xref target="draft-ietf-dtn-dtnma"/> by the DTN working group, where the network management interactions are typically in-band (aka over Bundle protocol) and asynchronous.</t>
      <t>An important use case of Delay-Tolerant Networks(DTN) using the Bundle Protocol<xref target="RFC9171"/> is in space communications. Current scenarios by space agencies<xref target="ioag"/> involves the use of an IP network on the planetary body and the use of the Bundle Protocol between planetary bodies, including Earth. Therefore, some Bundle Protocol nodes will also be IP connected on those isolated IP networks. This document enables the network management of Bundle protocol instances for these BP-and-IP-connected nodes using IP-based NETCONF or RESTCONF.</t>
      <t>By adding the capabilities of this document, the following network management scenarios are possible. First, a network management station on the isolated IP network, such as on a planetary body, is managing all the BP-IP nodes reachable directly on its IP network using either NETCONF or RESTCONF with this document Yang model. Second, with this document Yang model, a network management station on another planetary body, such as Earth, is managing BP-IP nodes on remote IP networks on other planetery bodies by encapsulating RESTCONF queries and response over HTTP over Bundle protocol over the DTN network in deep space, such encapsulation is described in <xref target="draft-blanchet-http-over-bp"/>. Finally, these dual protocol (BP and IP) nodes as well as BP only nodes are managed by DNTMA.</t>
      <section anchor="requirements">
        <name>Requirements Language</name>
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
          "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT
          RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
          interpreted as described in BCP 14 <xref target="RFC2119"/>
          <xref target="RFC8174"/> when, and only when, they appear in
          all capitals, as shown here.</t>
      </section>
    </section>
    <section>
      <name>Design of the Yang model</name>
      <t>Two modules are defined. The ietf-bundle-protocol-types module defines various base Yang models, mostly typedefs and groupings,  that can be reused in other BP related models. The ietf-bundle-protocol module defines the Yang model of a BP node including its storage of bundles.</t>
      <t>It is expected to be augmented by TVR contact plan work<xref target="draft-qu-tvr-schedule-yang"/>.</t>
      <figure>
        <name>Tree diagram of the BP node</name>
        <artwork>
              +--rw node
                 +--rw version*                      bundle-types:bundle-protocol-version
                 +--rw endpoint_identifier?          bundle-types:bundle-endpoint-identifier
                 +--rw bundle-lifetime?              uint32
                 +--rw maximum-bundle-size?          uint32
                 +--rw send-status-reports?          boolean
                 +--rw neighbors
                 |  +--rw neighbor* [endpoint-identifier]
                 |     +--rw activate?                    boolean
                 |     +--ro active?                      boolean
                 |     +--rw endpoint-identifier          bundle-types:bundle-endpoint-identifier
                 |     +--rw convergence-layer-adapter
                 |        +--rw type?         bundle-types:convergence-layer-adapter-type
                 |        +--rw (transport)?
                 |           +--:(udp-and-tcp)
                 |              +--rw ip?     inet:ip-address
                 |              +--rw port?   inet:port-number
                 +--rw bundle-queue-size?            uint32
                 +--rw convergence-layer-adapters*   bundle-types:convergence-layer-adapter-type
                 +--rw store
                    +--rw maximum-size?      uint32
                    +--ro current-size?      uint32
                    +--rw maximum-bundles?   uint32
                    +--ro bundles-number?    uint32
                    +--rw bundles* [id]
                       +--rw id                                 yang:yang-identifier
                       +--rw version?                           bundle-protocol-version
                       +--rw processing-control-flags*          bundle-processing-control-flag
                       +--rw destination-endpoint-identifier?   bundle-endpoint-identifier
                       +--rw source-node-endpoint-identifier?   bundle-endpoint-identifier
                       +--rw report-to-endpoint-identifier?     bundle-endpoint-identifier
                       +--rw creation-timestamp?                yang:timestamp
                       +--rw lifetime?                          uint32
                       +--rw application-data-unit-length?      uint32
          </artwork>
      </figure>
    </section>
    <section>
      <name>Bundle Protocol Types YANG Module</name>
      <artwork><![CDATA[
    <CODE BEGINS> file "ietf-bundle-protocol-types@2023-07-05.yang"
module ietf-bundle-protocol-types {
      yang-version 1.1;
      namespace "urn:ietf:params:xml:ns:yang:ietf-bundle-protocol-types";
      prefix bundle-types;

      import ietf-inet-types {
        prefix inet;
        reference
          "RFC 6991: Common YANG Data Types";
      }
      import ietf-yang-types {
        prefix yang;
      }

      organization
        "IETF DTN: Delay-Tolerant Networking Working Group";
      contact
        "WG Web:   <http://datatracker.ietf.org/wg/dtn>
         WG List:  <mailto:dtn@ietf.org>

         Author:   Marc Blanchet
                   <mailto:marc.blanchet@viagenie.ca>
         Author:    Yingzhen Qu
                   <mailto:yingzhen.ietf@gmail.com>";
      description
        "This module contains Bundle Protocol (RFC5050, RFC9171) types.

          The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
          NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
          'MAY', and 'OPTIONAL' in this document are to be interpreted as
          described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
          they appear in all capitals, as shown here.

          Copyright (c) 2023 IETF Trust and the persons identified as
          authors of the code.  All rights reserved.

          Redistribution and use in source and binary forms, with or
          without modification, is permitted pursuant to, and subject to
          the license terms contained in, the Revised BSD License set
          forth in Section 4.c of the IETF Trust's Legal Provisions
          Relating to IETF Documents
          (https://trustee.ietf.org/license-info).

          This version of this YANG module is part of RFC TBD; see
          the RFC itself for full legal notices.";

      revision 2023-08-01 {
        description
          "Initial revision. date TBD";
        reference
          "RFC 5050 Bundle Protocol Specification
           RFC 9171 Bundle Protocol Version 7
           IANA Bundle Protocol Registry,
           https://www.iana.org/assignments/bundle/bundle.xhtml";
      }

      typedef bundle-block-types {
        type enumeration {
          enum unknown {
            value 0;
            description
              "Unknown block type";
          }
          enum payload-block {
            value 1;
            description
              "Payload block type";
          }
          enum authentication-block {
            value 2;
            description
              "Authentication block type";
          }
          enum payload-integrity-block {
            value 3;
            description
              "payload integrity block type";
          }
          enum previous-hop-insertion-block {
            value 4;
            description
              "Previous hop insertion block type";
          }
          enum previous-node {
            value 6;
            description
              "Previous node type";
          }
          enum bundle-age {
            value 7;
            description
              "Bundle age type";
          }
          enum metadata-extension-block {
            value 8;
            description
              "Metadata extension type";
          }
          enum extension-security-block {
            value 9;
            description
              "Extension security block type";
          }
          enum hop-count {
            value 10;
            description
              "Hop count type";
          }
          enum block-integrity {
            value 11;
            description
              "Block integrity type";
          }
          enum block-confidentialy {
            value 12;
            description
              "Block confidentiality type";
          }
        }
        description
          "Bundle block types";
        reference
          "https://www.iana.org/assignments/bundle/
           bundle.xhtml#block-types";
      }

      typedef bundle-protocol-version {
        type enumeration {
          enum unknown {
            value 0;
            description
              "An unknown or unspecified version of the Bundle protocol.";
          }
          enum version6 {
            value 6;
            description
              " The Bundle protocol version 6 as defined in RFC5050";
          }
          enum version7 {
            value 7;
            description
              "The Bundle protocol version 7 as defined in RFC9171";
          }
        }
        description
          "Bundle protocol version number";
        reference
          "https://www.iana.org/assignments/bundle/
           bundle.xhtml#primary-version";
      }

      typedef bundle-processing-control-flag {
        type enumeration {
          enum unknown {
            description
              "Uknown control flag";
          }
          enum block-replicated-every-fragment {
            description
              "Block must be replicated in every fragment";
          }
          enum transmit-status-report-block-not-processed {
            description
              "Transmit status report if block can't be processed";
          }
          enum delete-bundle-block-not-processed {
            description
              "Delete bundle if block can't be processed";
          }
          enum last-block {
            description
              "Last block";
          }
          enum discard-block-not-processed {
            description
              "Discard block if it can't be processed";
          }
          enum block-forwarded-not-processed {
            description
              "Block was forwarded without being processed";
          }
          enum block-contains-eid-reference {
            description
              "Block contains an EID-reference field";
          }
        }
        description
          "Bundle processing control flags";
        reference
          "https://www.iana.org/assignments/bundle/
           bundle.xhtml#block-processing-control";
      }

      /* TBD: more defs from IANA registry
       */

      typedef convergence-layer-adapter-type {
        type enumeration {
          enum tcpcl {
            description
              "TCP convergence layer";
            reference
              "RFC7242: Delay-Tolerant Networking TCP
               Convergence-Layer Protocol";
          }
          enum tcpclv4 {
            description
              "TCPv4 convergence layer";
            reference
              "RFC9174: Delay-Tolerant Networking TCP Convergence-Layer
               Protocol Version 4";
          }
          enum udpcl {
            description
              "UDP convergence layer";
            reference
              "RFC7122: Datagram Convergence Layers for the Delay- and
               Disruption-Tolerant Networking (DTN) Bundle Protocol and
               Licklider Transmission Protocol (LTP)";
          }
          enum ltp {
            description
              "Licklider Transmission Protocol";
            reference
              "RFC 5326: Licklider Transmission Protocol - Specification";
          }
        }
        description
          "Types of convergence layers of Bundle protocol";
      }

      typedef bundle-endpoint-identifier {
        type inet:uri;
        description
          "Bundle protocol Endpoint Identifier type";
      }

      grouping address-port {
        leaf ip {
          type inet:ip-address;
          description
            "The IPv4 or IPv6 address";
        }
        leaf port {
          type inet:port-number;
          description
            "The tranport port number";
        }
        description
          "IP address and port";
      }

      grouping convergence-layer-adapter {
        leaf type {
          type bundle-types:convergence-layer-adapter-type;
          description
            "Type of the convergence layer of this neighbor";
        }
        choice transport {
          case udp-and-tcp {
            uses address-port;
          }
          /* other cla */
          description
            "Convergence layer adapter specific transport information";
        }
        description
          "The convergence layer adapter used to communicate
           with this neighbor";
      }

      grouping bundle {
        leaf id {
          type yang:yang-identifier;
          description
            "Unique id of a bundle. Local to the implementation. Enables referencing it for
             management purposes";
        }
        leaf version {
          type bundle-protocol-version;
          description
            "Bundle protocol version";
        }
        leaf-list processing-control-flags {
          type bundle-processing-control-flag;
          description
            "List of bundle processing control flags";
        }
        leaf destination-endpoint-identifier {
          type bundle-endpoint-identifier;
          description
            "Endpoint identifier of the destination";
        }
        leaf source-node-endpoint-identifier {
          type bundle-endpoint-identifier;
          description
            "Endpoint identifier of the source node";
        }
        leaf report-to-endpoint-identifier {
          type bundle-endpoint-identifier;
          description
            "Endpoint identifier of the node to send reports to";
        }
        leaf creation-timestamp {
          type yang:timestamp;
          description
            "Creation timestamp";
        }
        leaf lifetime {
          type uint32;
          units "seconds";
          description
            "Lifetime of the bundle in seconds";
        }
        leaf application-data-unit-length {
          type uint32;
          units "octets";
          description
            "Application data unit (aka bundle payload) length in octets";
        }
        /* TBD: additional fields: fragmentoffset, crc-type, ... */
        description
          "A bundle";
        reference
          "RFC 5050 Bundle Protocol Specification
           RFC 9171 Bundle Protocol Version 7";
      }
    }

    <CODE ENDS>
          ]]></artwork>
    </section>
    <section>
      <name>Bundle Protocol YANG Module</name>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-bundle-protocol@2023-07-05.yang"
module ietf-bundle-protocol {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-bundle-protocol";
  prefix bundle;

  import ietf-bundle-protocol-types {
    prefix bundle-types;
  }

  organization
    "IETF DTN: Delay-Tolerant Networking Working Group";
  contact
    "WG Web:   <http://datatracker.ietf.org/wg/dtn>
     WG List:  <mailto:dtn@ietf.org>

     Author:   Marc Blanchet
               <mailto:marc.blanchet@viagenie.ca>
     Author:    Yingzhen Qu
               <mailto:yingzhen.ietf@gmail.com>";
  description
    "This module contains Bundle Protocol (RFC5050, RFC9171) types.

      The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
      NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
      'MAY', and 'OPTIONAL' in this document are to be interpreted as
      described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
      they appear in all capitals, as shown here.

      Copyright (c) 2023 IETF Trust and the persons identified as
      authors of the code.  All rights reserved.

      Redistribution and use in source and binary forms, with or
      without modification, is permitted pursuant to, and subject to
      the license terms contained in, the Revised BSD License set
      forth in Section 4.c of the IETF Trust's Legal Provisions
      Relating to IETF Documents
      (https://trustee.ietf.org/license-info).

      This version of this YANG module is part of RFC TBD; see
      the RFC itself for full legal notices.";

  revision 2023-08-01 {
    description
      "Initial revision. date TBD";
    reference
      "RFC 5050 Bundle Protocol Specification
       RFC 9171 Bundle Protocol Version 7
       IANA Bundle Protocol Registry,
       https://www.iana.org/assignments/bundle/bundle.xhtml";
  }

  container node {
    description
      "A bundle protocol node";
    leaf-list version {
      type bundle-types:bundle-protocol-version;
      description
        "The list of bundle protocol versions this node supports";
    }
    leaf endpoint_identifier {
      type bundle-types:bundle-endpoint-identifier;
      description
        "The endpoint identifier of this node";
    }
    leaf bundle-lifetime {
      type uint32;
      units "seconds";
      description
        "The default bundle lifetime";
    }
    leaf maximum-bundle-size {
      type uint32;
      units "octets";
      description
        "The maximum bundle size in bytes";
    }
    leaf send-status-reports {
      type boolean;
      default "false";
      description
        "Should the node send status reports";
    }
    container neighbors {
      list neighbor {
        key "endpoint-identifier";
        description
          "A bundle protocol neighbor of this node. May not be active";
        leaf activate {
          type boolean;
          default "false";
          description
            "The configuration status of the neighbor";
        }
        leaf active {
          type boolean;
          config false;
          description
            "From the perspective of the node, this neighbor is live and active";
        }
        leaf endpoint-identifier {
          type bundle-types:bundle-endpoint-identifier;
          description
            "Endpoint identifier of the neighbor";
        }
        /* here should be augmented by the contact plan start, stop time, ... */
        container convergence-layer-adapter {
          uses bundle-types:convergence-layer-adapter;
          description
            "The convergence layer adapter of this neighbor";
        }
      }
      description
        "List of bundle protocol neighbors of this node";
    }
    /* TBD: from TVR work
      leaf-list forwarding-policies {
      }
     */
    leaf bundle-queue-size {
      type uint32;
      units "octets";
      description
        "The bundle queue size in bytes";
    }
    leaf-list convergence-layer-adapters {
      type bundle-types:convergence-layer-adapter-type;
      description
        "The list of convergence layer adapters currently configured
         on the node";
    }
    container store {
      description
        "Storage for bundles that are waiting in storage because the
         destination is not reachable yet, as opposed to temporary
         bundles in memory about to be forwarded";
      leaf maximum-size {
        type uint32;
        description
          "maximum number of bytes of bundles storage";
      }
      leaf current-size {
        type uint32;
        config false;
        description
          "current size (in bytes) of used bundles storage";
      }
      leaf maximum-bundles {
        type uint32;
        description
          "maximum number of bundles in storage";
      }
      leaf bundles-number {
        type uint32;
        config false;
        description
          "current number of bundles in storage";
      }
      list bundles {
        key "id";
        uses bundle-types:bundle;
        description
          "Stored bundles awaiting forwarding";
      }
    }
  }
}

<CODE ENDS>
      ]]></artwork>
    </section>
    <section anchor="IANA">
      <name>IANA Considerations</name>
      <t>
        This document registers two URI in the IETF XML registry
        <xref target="RFC3688"/>.  Following the format in <xref target="RFC3688"/>,
        the following registration is requested to be made:
      </t>
      <artwork>
       URI: urn:ietf:params:xml:ns:yang:ietf-bundle-protocol
       Registrant Contact: The IESG.
       XML: N/A, the requested URI is an XML namespace.
       </artwork>
      <artwork>
       URI: urn:ietf:params:xml:ns:yang:ietf-bundle-protocol-types
       Registrant Contact: The IESG.
       XML: N/A, the requested URI is an XML namespace.
       </artwork>
      <t>
         This document registers two YANG modules in the YANG Module Names
         registry <xref target="RFC6020"/>.
       </t>
      <artwork>
       name: ietf-bundle-protocol-types
       namespace: urn:ietf:params:xml:ns:yang:ietf-bundle-protocol-types
       prefix: bundle-types
       reference: RFC XXXX
       </artwork>
      <artwork>
       name: ietf-bundle-protocol
       namespace: urn:ietf:params:xml:ns:yang:ietf-bundle-protocol
       prefix: bundle
       reference: RFC XXXX
       </artwork>
    </section>
    <section anchor="Security">
      <name>Security Considerations</name>
      <t>
        The YANG modules specified in this document define a schema for
        data that is designed to be accessed via network
        management protocols such as NETCONF <xref target="RFC6241"/> or
        RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure transport
        layer, and the mandatory-to-implement secure transport is Secure Shell (SSH)
        <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the
        mandatory-to-implement secure transport is TLS <xref target="RFC8446"/>.
      </t>

      <t>
        The NETCONF access control model <xref target="RFC8341"/> provides the
        means to restrict access for particular NETCONF or RESTCONF users to a
        pre-configured subset of all available NETCONF or RESTCONF protocol
        operations and content.
      </t>

      <t>
        There are a number of data nodes defined in ietf-bundle-protocol.yang module
        that are writable/creatable/deletable (i.e., config true, which is the default).
        These data nodes may be considered sensitive or vulnerable in some network
        environments. Write operations (e.g., edit-config) to these data nodes without
        proper protection can have a negative effect on network operations. There are
        the subtrees and data nodes and their sensitivity/vulnerability:
      </t>
      <ul spacing="compact" empty="true">
        <li>/node/neighbors</li>
        <li>/node/convergence-layer-adapters</li>
        <li>/store
        Modifications to these data nodes may result in a
        denial of service.</li>
      </ul>

      <t>
        Some of the readable data nodes in the ietf-bundle-protocol.yang module
        may be considered sensitive or vulnerable in some network environments. It is thus
        important to control read access (e.g., via get, get-config, or notification)
        to these data nodes.
      </t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.3688.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5050.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6020.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6242.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7950.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8040.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8341.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8446.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9171.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6241.xml"/>
        <reference anchor="draft-qu-tvr-schedule-yang" target="draft-qu-tvr-schedule-yang-00">
             <front>
                 <title>YANG Model for Scheduled Attributes</title>
                 <author fullname="Yingzhen Qu" initials="Y" surname="Qu"/>
                 <author fullname="Acee Lindem" initials="A." surname="Lindem"/>
                 <author fullname="Marc Blanchet" initials="M" surname="Blanchet"/>
                 <date month="07" year="2023"/>
             </front>
             <seriesInfo name="Internet-Draft" value="draft-qu-tvr-schedule-yang-00"/>
         </reference>
        <reference anchor="draft-ietf-dtn-dtnma" target="draft-ietf-dtn-dtnma-05">
          <front>
            <title>DTN Management Architecture</title>
            <author fullname="Edward J. Birrane" initials="E. J." surname="Birrane"/>
            <author fullname="Sarah Heiner" initials="S." surname="Heiner"/>
            <author fullname="Emery Annis" initials="E." surname="Annis"/>
            <date day="12" month="March" year="2023"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-dtn-dtnma-05"/>
        </reference>
        <reference anchor="draft-blanchet-http-over-bp" target="draft-blanchet-dtn-http-over-bp-00">
            <front>
                <title>Encapsulation of HTTP over Delay-Tolerant Networks(DTN) using the Bundle Protocol</title>
                <author initials="M" surname="Blanchet"/>
                <date year="2023"/>
            </front>
            <seriesInfo name="Internet-Draft" value="draft-blanchet-dtn-http-over-bp-00"/>
        </reference>
        <reference anchor="ioag">
          <front>
            <title>The Future Lunar Communications Architecture, Report of the Interagency Operations Advisory Group</title>
            <author>
              <organization>Lunar Communications Architecture Working Group, Interagency Operations Advisory Group</organization>
            </author>
            <date year="2022" month="January"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="Acknowledgements" numbered="false">
      <name>Acknowledgements</name>
      <t>The following people have reviewed and provided comments to improve this document (in no particular order): .</t>
    </section>
  </back>
</rfc>
